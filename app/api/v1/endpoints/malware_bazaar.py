from fastapi import APIRouter
from app.services.malware_bazaar import query_hash as qh
from app.services.malware_bazaar import query_yara as qy
from app.services.malware_bazaar import search_tag as st

router = APIRouter()

@router.post("/hash-query", description="Query hash for malware_bazaar")

async def hash_query(hash_value: str) -> dict:

    """
    Query a given hash value against the Malware Bazaar database.

    This function takes a hash value as an input, queries it against the Malware Bazaar database,
    and returns the response as a dictionary.

    Parameters:
    hash_value (str): The hash value to query. Should be a valid SHA-256, SHA-1, or MD5 hash.

    Returns:
    dict: The response from the Malware Bazaar database, typically containing information about
          whether the hash is associated with any known malware.
    
    """
    
    response =  qh.query_hash(hash_value)  
    return response

@router.post("/yara-query", description="Query YARA name for malware_bazaar")
async def yara_query(yara_name: str):

    """
    Query a given YARA rule name against the Malware Bazaar database.

    This asynchronous function takes a YARA rule name as an input, queries it against the Malware Bazaar database,
    and returns the response as a dictionary.

    Parameters:
    yara_name (str): The YARA rule name to query. Should be a valid YARA rule identifier.

    Returns:
    dict: The response from the Malware Bazaar database, typically containing information about
          whether the YARA rule is associated with any known malware. 
    """

    response =  qy.query_yara(yara_name)  
    return response

@router.post("/search-tag", description="Query tag on malware_bazaar")

async def search_tag(tag: str):

    """ 
    Query a given tag against the Malware Bazaar database.

    This asynchronous function takes a tag as an input, queries it against the Malware Bazaar database,
    and returns the response as a dictionary.

    Parameters:
    tag (str): The tag to query. Should be a valid tag identifier associated with malware samples in the database.

    Returns:
    dict: The response from the Malware Bazaar database, typically containing information about
          whether the tag is associated with any known malware.
    """
    
    response =  st.search_tag(tag)  
    return response